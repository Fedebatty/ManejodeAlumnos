/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import dao.AlumnoDAOSQL;
import java.util.ArrayList;
import java.util.List;
import persona.Alumno;
import persona.MiCalendarioException;
import persona.PersonaException;
import dao.DAO;
import dao.DAOException;
import dao.DAOFactory;
import dao.DAOFactoryException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Fede
 */
public class Alumno_GUI extends javax.swing.JFrame {

    private Alumno_Model aluModel;
    List<Alumno> alumnos = new ArrayList<>();
    private DAO<Alumno, Long> dao;

    
    
    /**
     * Creates new form Alumno_GUI
     * @throws persona.MiCalendarioException
     * @throws persona.PersonaException
     * @throws dao.DAOException
     * @throws dao.DAOFactoryException
     */
    public Alumno_GUI() throws MiCalendarioException, PersonaException, DAOException, DAOFactoryException {
        initComponents();
        setLocationRelativeTo(null);
        System.out.println("Hola Mundo");
        aluModel = new Alumno_Model();
        jTableAlumnos.setModel(aluModel);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonesFiltroLista = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlumnos = new javax.swing.JTable();
        jButtonAgregar = new javax.swing.JButton();
        jButtonConsultar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jComboBoxDaoSelect = new javax.swing.JComboBox<>();
        jButtonTXT = new javax.swing.JButton();
        jTextFieldFullPath = new javax.swing.JTextField();
        jRadioButtonTodos = new javax.swing.JRadioButton();
        jRadioButtonActivos = new javax.swing.JRadioButton();
        jRadioButtonEliminados = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableAlumnos.setFont(new java.awt.Font("Calibri", 1, 11)); // NOI18N
        jTableAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAlumnos);

        jButtonAgregar.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonConsultar.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButtonConsultar.setText("Consultar");
        jButtonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarActionPerformed(evt);
            }
        });

        jButtonEliminar.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonModificar.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jComboBoxDaoSelect.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jComboBoxDaoSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TXT", "SQL" }));
        jComboBoxDaoSelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxDaoSelectItemStateChanged(evt);
            }
        });
        jComboBoxDaoSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDaoSelectActionPerformed(evt);
            }
        });

        jButtonTXT.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButtonTXT.setText("Seleccionar archivo");
        jButtonTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTXTActionPerformed(evt);
            }
        });

        jTextFieldFullPath.setEditable(false);

        botonesFiltroLista.add(jRadioButtonTodos);
        jRadioButtonTodos.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jRadioButtonTodos.setSelected(true);
        jRadioButtonTodos.setText("Todos");
        jRadioButtonTodos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonTodosItemStateChanged(evt);
            }
        });

        botonesFiltroLista.add(jRadioButtonActivos);
        jRadioButtonActivos.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jRadioButtonActivos.setText("Activos");

        botonesFiltroLista.add(jRadioButtonEliminados);
        jRadioButtonEliminados.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jRadioButtonEliminados.setText("Inactivos");
        jRadioButtonEliminados.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jRadioButtonEliminadosItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("Metodo de Acceso");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButtonTodos)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonActivos)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButtonEliminados))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxDaoSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextFieldFullPath)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDaoSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldFullPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTXT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonTodos)
                    .addComponent(jRadioButtonActivos)
                    .addComponent(jRadioButtonEliminados))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonModificar)
                        .addGap(11, 11, 11)
                        .addComponent(jButtonEliminar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        
        if (dao==null){
            JOptionPane.showMessageDialog(this, "No se ha cargado la lista", "Info", JOptionPane.INFORMATION_MESSAGE);
        }else{
        AlumnoDialog alumDialog = new AlumnoDialog(this, true);
        alumDialog.habilitarCampos(true);
        alumDialog.setVisible(true);
        try {
                dao.create(alumDialog.getAlumno());
                listarAlumnos();
            } catch (DAOException ex) {
                Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex, "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarActionPerformed
        
        int filaAluSelect = jTableAlumnos.getSelectedRow();
        if (filaAluSelect == -1) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún alumno", "Info", JOptionPane.INFORMATION_MESSAGE);
        }else{
            Alumno aluSelect = alumnos.get(filaAluSelect);
            //TODO no se como usar el READ
            AlumnoDialog alumDialog = new AlumnoDialog(this, true);
            alumDialog.Alu2Dialog(aluSelect);
            alumDialog.habilitarCampos(false);
            alumDialog.setVisible(true);
 
        }
            
    }//GEN-LAST:event_jButtonConsultarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        int filaAluSelect = jTableAlumnos.getSelectedRow();
        if (filaAluSelect == -1) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún alumno", "Info", JOptionPane.INFORMATION_MESSAGE);
        }else{
            Alumno aluSelect = alumnos.get(filaAluSelect);
            if (dao instanceof AlumnoDAOSQL) {
                int eliminacion = JOptionPane.showOptionDialog(this, "Que tipo de borrado desea realizar?", "Eliminado SQL", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Lógico","Físico","Cancelar"}, null);
                switch (eliminacion) {
                    case 0:
                        aluSelect.setActivo(false);
                        try {
                            dao.update(aluSelect);
                        } catch (DAOException ex) {
                            Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
                        }   listarAlumnos();
                        JOptionPane.showMessageDialog(this, "Se ha dado de baja el alumno", "Info", JOptionPane.INFORMATION_MESSAGE);
                        break;
                    case 1:
                        try {
                            int confirmacion = JOptionPane.showConfirmDialog(this, "Está seguro que desea borrar?", "Confirma", JOptionPane.YES_NO_OPTION);
                            if (confirmacion == 0) {
                                dao.delete(aluSelect.getDni());
                                listarAlumnos();
                                JOptionPane.showMessageDialog(this, "Se ha eliminado el alumno", "Info", JOptionPane.INFORMATION_MESSAGE);
                            }
                            
                        } catch (DAOException ex) {
                            Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
                        }   break;
                    default:
                }
            }else{
                try {
                    int confirmacion = JOptionPane.showConfirmDialog(this, "Está seguro que desea borrar?", "Confirma", JOptionPane.YES_NO_OPTION);
                    if (confirmacion == 0) {
                        dao.delete(aluSelect.getDni());
                        listarAlumnos();
                        JOptionPane.showMessageDialog(this, "Se ha eliminado el alumno", "Info", JOptionPane.INFORMATION_MESSAGE);
                    }

                } catch (DAOException ex) {
                    Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        int filaAluSelect = jTableAlumnos.getSelectedRow();
        if (filaAluSelect == -1) {
            JOptionPane.showMessageDialog(this, "No se ha seleccionado ningún alumno", "Info", JOptionPane.INFORMATION_MESSAGE);
        }else{
            Alumno aluSelect = alumnos.get(filaAluSelect);
            
            AlumnoDialog alumDialog = new AlumnoDialog(this, true);
            alumDialog.Alu2Dialog(aluSelect);
            alumDialog.habilitarCampos(true);
            alumDialog.setDniBloqueado();
            alumDialog.setVisible(true);
            
            try {
                dao.update(alumDialog.getAlumno());
                listarAlumnos();
            } catch (DAOException ex) {
                Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, ex, "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTXTActionPerformed
        JFileChooser JFileChooser = new JFileChooser();
        int archivoSel = JFileChooser.showOpenDialog(this);
        if (archivoSel!=JFileChooser.APPROVE_OPTION){
            return;
        }
        
        jTextFieldFullPath.setText(JFileChooser.getSelectedFile().getAbsolutePath());
        
        Map<String, String> config = new HashMap<>();
        config.put(DAOFactory.TIPO_DAO, DAOFactory.TIPO_DAO_TXT);
        config.put(DAOFactory.FILE_NAME, jTextFieldFullPath.getText());
        try {
            dao = DAOFactory.getIntance().createDAO(config);
        } catch (DAOFactoryException ex) {
                Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
           
        listarAlumnos();

    }//GEN-LAST:event_jButtonTXTActionPerformed

    private void jComboBoxDaoSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDaoSelectActionPerformed
        Map<String, String> config = new HashMap<>();

        if ("TXT".equals(jComboBoxDaoSelect.getSelectedItem())) {
             //TODO mostrar y ocultar fullpath y boton
            jTextFieldFullPath.setVisible(true);
            jButtonTXT.setVisible(true);

        }else {
            //TODO mostrar textfield para conexion BD
            jTextFieldFullPath.setVisible(false);
            jButtonTXT.setVisible(false);
            jComboBoxDaoSelect.setFocusable(false);
            
            BDDialog bdDialog = new BDDialog(this, true);
            
            bdDialog.setVisible(true);
            
            bdDialog.getDto();
            
            config.put(DAOFactory.TIPO_DAO, DAOFactory.TIPO_DAO_SQL);
            //config.put(DAOFactory.URL_DB, bdDialog.getDto().getUrlBD());
            config.put(DAOFactory.URL_DB, "jdbc:mysql://acnalert.eastus.cloudapp.azure.com:3306/efc");
            config.put(DAOFactory.USUARIO_DB, bdDialog.getDto().getUser());
            config.put(DAOFactory.PASS_DB, String.valueOf(bdDialog.getDto().getPassword()));
            try {
                dao = DAOFactory.getIntance().createDAO(config);
            } catch (DAOFactoryException ex) {
                    Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            listarAlumnos();
        }
    }//GEN-LAST:event_jComboBoxDaoSelectActionPerformed

    private void jComboBoxDaoSelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxDaoSelectItemStateChanged
        
        aluModel = new Alumno_Model();
        jTableAlumnos.setModel(aluModel);
        
        
        if ("TXT".equals(jComboBoxDaoSelect.getSelectedItem())) {
             //TODO mostrar y ocultar fullpath y boton

            if (jTextFieldFullPath.getText().length()!=0){
                Map<String, String> config = new HashMap<>();
                config.put(DAOFactory.TIPO_DAO, DAOFactory.TIPO_DAO_TXT);
                config.put(DAOFactory.FILE_NAME, jTextFieldFullPath.getText());
                try {
                    dao = DAOFactory.getIntance().createDAO(config);
                    listarAlumnos();
                } catch (DAOFactoryException ex) {
                    Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
                }

             } 
        }
        
    }//GEN-LAST:event_jComboBoxDaoSelectItemStateChanged

    private void jRadioButtonTodosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonTodosItemStateChanged
        try {
            if (jRadioButtonTodos.isSelected()) {
                alumnos = dao.findAll(null);
            }else{
                alumnos = dao.findAll(true);
            }
            aluModel.setAlumnos(alumnos);
        } catch (DAOException ex) {
            Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jRadioButtonTodosItemStateChanged

    private void jRadioButtonEliminadosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jRadioButtonEliminadosItemStateChanged
        try {
            if (jRadioButtonEliminados.isSelected()) {
                alumnos = dao.findAll(false);
            }else{
                alumnos = dao.findAll(true);
            }   
            aluModel.setAlumnos(alumnos);
        } catch (DAOException ex) {
            Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jRadioButtonEliminadosItemStateChanged

    public void listarAlumnos() {
        try {
            if (jRadioButtonTodos.isSelected()) {
                alumnos = dao.findAll(null);
            }else if (jRadioButtonActivos.isSelected()){
                alumnos = dao.findAll(true);
            }else{
                alumnos = dao.findAll(false);
            }
            aluModel.setAlumnos(alumnos);
        } catch (DAOException ex) {
            Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Alumno_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Alumno_GUI().setVisible(true);
            } catch (MiCalendarioException | PersonaException | DAOException | DAOFactoryException ex) {
                Logger.getLogger(Alumno_GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup botonesFiltroLista;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonConsultar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonTXT;
    private javax.swing.JComboBox<String> jComboBoxDaoSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButtonActivos;
    private javax.swing.JRadioButton jRadioButtonEliminados;
    private javax.swing.JRadioButton jRadioButtonTodos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAlumnos;
    private javax.swing.JTextField jTextFieldFullPath;
    // End of variables declaration//GEN-END:variables
}
